{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Escritorio/GitHub/DIU-PTA/React/Front Tutoriales React V1 2024/src/components/tutorial.component.js\";\nimport React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTutorial = async id => {\n      try {\n        const response = await TutorialDataService.get(id);\n        const {\n          title,\n          description,\n          published\n        } = response.data;\n        this.setState({\n          title,\n          description,\n          published\n        });\n      } catch (error) {\n        console.error(\"Error al obtener el tutorial:\", error);\n      }\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = event.target;\n      this.setState({\n        [name]: type === \"checkbox\" ? checked : value\n      });\n    };\n\n    this.editTutorial = async event => {\n      event.preventDefault();\n      const {\n        id,\n        title,\n        description,\n        published\n      } = this.state;\n      const data = {\n        title,\n        description,\n        published\n      };\n\n      try {\n        const response = await TutorialDataService.update(id, data);\n        console.log(\"Tutorial actualizado:\", response.data);\n      } catch (error) {\n        console.error(\"Error al actualizar el tutorial:\", error);\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      // Obtiene el ID desde la URL\n      title: \"\",\n      description: \"\",\n      published: false\n    };\n  } // Cargar datos del tutorial cuando el componente se monte\n\n\n  componentDidMount() {\n    this.getTutorial(this.state.id);\n  } // MÃ©todo para obtener el tutorial por ID\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Edit Tutorial\"), React.createElement(\"form\", {\n      onSubmit: this.editTutorial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"id\",\n      name: \"id\",\n      value: this.state.id,\n      disabled: true // No se puede modificar\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleInputChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"published\",\n      name: \"published\",\n      checked: this.state.published,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"published\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Published\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/Escritorio/GitHub/DIU-PTA/React/Front Tutoriales React V1 2024/src/components/tutorial.component.js"],"names":["React","Component","TutorialDataService","Tutorial","constructor","props","getTutorial","id","response","get","title","description","published","data","setState","error","console","handleInputChange","event","name","value","type","checked","target","editTutorial","preventDefault","state","update","log","match","params","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,WAhBmB,GAgBL,MAAOC,EAAP,IAAc;AACxB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMN,mBAAmB,CAACO,GAApB,CAAwBF,EAAxB,CAAvB;AACA,cAAM;AAAEG,UAAAA,KAAF;AAASC,UAAAA,WAAT;AAAsBC,UAAAA;AAAtB,YAAoCJ,QAAQ,CAACK,IAAnD;AACA,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,KAAF;AAASC,UAAAA,WAAT;AAAsBC,UAAAA;AAAtB,SAAd;AACH,OAJD,CAIE,OAAOG,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;AACH;AACJ,KAxBkB;;AAAA,SA0BnBE,iBA1BmB,GA0BEC,KAAD,IAAW;AAC3B,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,IAAf;AAAqBC,QAAAA;AAArB,UAAiCJ,KAAK,CAACK,MAA7C;AACA,WAAKT,QAAL,CAAc;AACV,SAACK,IAAD,GAAQE,IAAI,KAAK,UAAT,GAAsBC,OAAtB,GAAgCF;AAD9B,OAAd;AAGH,KA/BkB;;AAAA,SAiCnBI,YAjCmB,GAiCJ,MAAON,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACO,cAAN;AAEA,YAAM;AAAElB,QAAAA,EAAF;AAAMG,QAAAA,KAAN;AAAaC,QAAAA,WAAb;AAA0BC,QAAAA;AAA1B,UAAwC,KAAKc,KAAnD;AACA,YAAMb,IAAI,GAAG;AAAEH,QAAAA,KAAF;AAASC,QAAAA,WAAT;AAAsBC,QAAAA;AAAtB,OAAb;;AAEA,UAAI;AACA,cAAMJ,QAAQ,GAAG,MAAMN,mBAAmB,CAACyB,MAApB,CAA2BpB,EAA3B,EAA+BM,IAA/B,CAAvB;AACAG,QAAAA,OAAO,CAACY,GAAR,CAAY,uBAAZ,EAAqCpB,QAAQ,CAACK,IAA9C;AACH,OAHD,CAGE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,kCAAd,EAAkDA,KAAlD;AACH;AACJ,KA7CkB;;AAEf,SAAKW,KAAL,GAAa;AACTnB,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWwB,KAAX,CAAiBC,MAAjB,CAAwBvB,EADnB;AACuB;AAChCG,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMH,GAT2C,CAW5C;;;AACAmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKzB,WAAL,CAAiB,KAAKoB,KAAL,CAAWnB,EAA5B;AACH,GAd2C,CAgB5C;;;AAgCAyB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAM,MAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,EAAE,EAAC,IAHP;AAII,MAAA,IAAI,EAAC,IAJT;AAKI,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWnB,EALtB;AAMI,MAAA,QAAQ,MANZ,CAMa;AANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,EAAE,EAAC,OAHP;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,KAAK,EAAE,KAAKmB,KAAL,CAAWhB,KALtB;AAMI,MAAA,QAAQ,EAAE,KAAKO,iBANnB;AAOI,MAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZJ,EAwBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,EAAE,EAAC,aAHP;AAII,MAAA,IAAI,EAAC,aAJT;AAKI,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWf,WALtB;AAMI,MAAA,QAAQ,EAAE,KAAKM,iBANnB;AAOI,MAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAxBJ,EAoCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,EAAE,EAAC,WAFP;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWd,SAJxB;AAKI,MAAA,QAAQ,EAAE,KAAKK,iBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,EAQgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARhD,CApCJ,EA8CI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CA9CJ,CAFJ,CADJ;AAyDH;;AA1G2C","sourcesContent":["import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id, // Obtiene el ID desde la URL\n            title: \"\",\n            description: \"\",\n            published: false\n        };\n    }\n\n    // Cargar datos del tutorial cuando el componente se monte\n    componentDidMount() {\n        this.getTutorial(this.state.id);\n    }\n\n    // MÃ©todo para obtener el tutorial por ID\n    getTutorial = async (id) => {\n        try {\n            const response = await TutorialDataService.get(id);\n            const { title, description, published } = response.data;\n            this.setState({ title, description, published });\n        } catch (error) {\n            console.error(\"Error al obtener el tutorial:\", error);\n        }\n    };\n\n    handleInputChange = (event) => {\n        const { name, value, type, checked } = event.target;\n        this.setState({\n            [name]: type === \"checkbox\" ? checked : value\n        });\n    };\n\n    editTutorial = async (event) => {\n        event.preventDefault();\n\n        const { id, title, description, published } = this.state;\n        const data = { title, description, published };\n\n        try {\n            const response = await TutorialDataService.update(id, data);\n            console.log(\"Tutorial actualizado:\", response.data);\n        } catch (error) {\n            console.error(\"Error al actualizar el tutorial:\", error);\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Edit Tutorial</h2>\n                <form onSubmit={this.editTutorial}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"id\">ID</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"id\"\n                            name=\"id\"\n                            value={this.state.id}\n                            disabled // No se puede modificar\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"title\"\n                            name=\"title\"\n                            value={this.state.title}\n                            onChange={this.handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"description\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"checkbox\"\n                            id=\"published\"\n                            name=\"published\"\n                            checked={this.state.published}\n                            onChange={this.handleInputChange}\n                        />\n                        <label htmlFor=\"published\">Published</label><br />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}